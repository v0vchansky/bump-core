// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  sslmode  = "require"
  sslcert  = env("CERT_PATH")
  binaryTargets = ["native", "linux-musl", "debian-openssl-1.1.x", "darwin"]
}

datasource db {
  provider = "postgresql"
  url = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Users {
    uuid String @id @unique @default(uuid())
    phone String? @unique
    email String? @unique
    birthday DateTime? @db.Date
    userName String? @unique
    displayName String?
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    avatarUrl String?
    deviceTokenFCM String?
    geolocations Geolocations[]
    userRelations UsersRelations[]
    shadowActions ShadowActions[]
    verification Verifications?
}

model Verifications {
    uuid String @id @unique @default(uuid())
    code String
    user Users @relation(fields: [userUuid], references: [uuid])
    userUuid String @unique
}

model Geolocations {
    uuid String @id @unique @default(uuid())
    lat Float
    lon Float
    speed Float
    localTime DateTime
    batteryLevel Float
    batteryIsCharging Boolean
    createdAt DateTime @default(now())
    updatedAt DateTime @default(now())
    user Users @relation(fields: [userUuid], references: [uuid])
    userUuid String
}

model UsersRelations {
    uuid String @id @unique @default(uuid())
    user Users @relation(fields: [userUuid], references: [uuid])
    userUuid String
    targetUserUuid String
    type String
}

model ShadowActions {
    uuid String @id @unique @default(uuid())
    type String
    targetUserUuid String
    targetUser Users @relation(fields: [targetUserUuid], references: [uuid])
    createdAt DateTime @default(now())
    onCompleteAction Json?
    payload Json?
}
