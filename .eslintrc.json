{
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "project": "**/tsconfig.json",
        "tsconfigRootDir": "__dirname",
        "sourceType": "module"
    },
    "plugins": ["@typescript-eslint", "simple-import-sort"],
    "extends": ["eslint:recommended", "plugin:@typescript-eslint/recommended", "prettier"],
    "root": true,
    "env": {
        "node": true,
        "jest": true
    },
    "ignorePatterns": [".eslintrc.json"],
    "rules": {
        "@typescript-eslint/interface-name-prefix": "off",
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/explicit-module-boundary-types": "off",
        "@typescript-eslint/no-explicit-any": "off",

        "simple-import-sort/sort": ["error"],
        "padding-line-between-statements": [
            "error",
            { "blankLine": "always", "prev": "*", "next": "return" },
            { "blankLine": "always", "prev": ["const", "let", "var"], "next": "*" },
            {
                "blankLine": "any",
                "prev": ["const", "let", "var"],
                "next": ["const", "let", "var"]
            },
            { "blankLine": "always", "prev": "*", "next": "multiline-block-like" },
            { "blankLine": "always", "prev": "multiline-block-like", "next": "*" }
        ],
        "@typescript-eslint/naming-convention": [
            "warn",
            {
                "selector": "interface",
                "format": ["PascalCase"],
                "custom": {
                    "regex": "^I[A-Z]",
                    "match": true
                }
            },
            {
                "selector": "enumMember",
                "format": ["StrictPascalCase"]
            }
        ],
        "no-use-before-define": "off",
        "@typescript-eslint/no-use-before-define": ["error"],
        "no-undef": "off",
        "no-duplicate-imports": "off",
        "@typescript-eslint/no-duplicate-imports": ["error"],
        "@typescript-eslint/array-type": ["error", { "default": "array-simple" }],
        "@typescript-eslint/no-non-null-assertion": ["error"],
        "@typescript-eslint/consistent-type-assertions": ["error", { "assertionStyle": "never" }],
        "@typescript-eslint/ban-types": ["error"],
        "@typescript-eslint/prefer-optional-chain": ["error"],
        "object-curly-newline": [
            "error",
            {
                "multiline": true,
                "consistent": true
            }
        ]
    }
}
